{
  "openapi": "3.0.0",
  "info": {
    "title": "Waste Sorting External  API Gateway",
    "description": "This is the API to access our Waste Sorting App services",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "v2.3.1"
  },
  "paths": {
    "/image-submission": {
      "post": {
        "tags": [
          "Image Submission Endpoint"
        ],
        "summary": "Submit an image that the user chooses",
        "description": "send an image to the api to add to the database",
        "requestBody": {
          "description": "Submit the image",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageSubmissionPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Image succesfully submitted"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/update": {
      "get": {
        "tags": [
          "Image Submission Endpoint"
        ],
        "summary": "Retrieve image categories and disposal instructions from database",
        "description": "",
        "responses": {
          "200": {
            "description": "Categories succesfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoriesAndCategoryInstructions"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/prediction": {
      "post": {
        "tags": [
          "Image Prediction Endpoint"
        ],
        "summary": "Receive an image for prediction",
        "description": "Sends an image to the api to return a predicted result",
        "requestBody": {
          "description": "image to predict",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImagePredictionPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the detected waste category based on the image sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prediction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/create-user": {
      "post": {
        "tags": [
          "User Endpoint"
        ],
        "summary": "Send information to create user",
        "description": "Send username, email and password to create a user",
        "requestBody": {
          "description": "User info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created user"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/authenticate-user": {
      "post": {
        "tags": [
          "User Endpoint"
        ],
        "summary": "Send information to sign-in",
        "description": "Send username and password to authenticate user",
        "requestBody": {
          "description": "User info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Info"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Authentication failed"
          }
        }
      }
    },
    "/update-password": {
      "patch": {
        "tags": [
          "User Endpoint"
        ],
        "summary": "Send information to change password",
        "description": "Send username and new password to change current password",
        "requestBody": {
          "description": "User info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully change password"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/reset-password": {
      "post": {
        "tags": [
          "User Endpoint"
        ],
        "summary": "Send information to reset password",
        "description": "Send email to reset current password",
        "requestBody": {
          "description": "User info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPassword"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The email has been sent"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/update-username-email": {
      "patch": {
        "tags": [
          "User Endpoint"
        ],
        "summary": "Send information to update username and email",
        "description": "Send old username, new username and email to update current username",
        "requestBody": {
          "description": "User info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUsernameAndEmail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully updated username and email"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/delete-user": {
      "patch": {
        "tags": [
          "User Endpoint"
        ],
        "summary": "Send information to delete user",
        "description": "Send username to delete user",
        "requestBody": {
          "description": "User info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The user is deleted or The user does not exist"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/bin-images/<int:bid>": {
      "get": {
        "tags": [
          "Bin Images Endpoint"
        ],
        "summary": "Retrieve bin images",
        "description": "",
        "responses": {
          "200": {
            "description": "Images succesfully retrieved",
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/BinImages"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/building-images/<int:bid>": {
      "get": {
        "tags": [
          "Building Images Endpoint"
        ],
        "summary": "Retrieve building images",
        "description": "",
        "responses": {
          "200": {
            "description": "Images succesfully retrieved",
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/BuildingImages"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/verify-email": {
      "post": {
        "tags": [
          "User Endpoint"
        ],
        "summary": "Send information to verify email",
        "description": "Send passcode and email to verify email",
        "requestBody": {
          "description": "User info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Info, Status"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ImageSubmissionPayload": {
        "required": [
          "category",
          "image"
        ],
        "type": "object",
        "properties": {
          "category": {
            "enum": [
              "Cardboard",
              "Glass",
              "Metal",
              "Paper",
              "Plastic",
              "Trash"
            ],
            "type": "string"
          },
          "image": {
            "type": "string",
            "format": "byte"
          },
          "email": {
            "type": "string"
          }
        },
        "example": {
          "example 1": {
            "category": "cardboard",
            "image": "string",
            "email": "admin@amind.com"
          },
          "example 2": {
            "category": "cardboard",
            "image": "string",
            "email": null
          }
        }
      },
      "ImagePredictionPayload": {
        "required": [
          "image"
        ],
        "type": "object",
        "properties": {
          "image": {
            "type": "object",
            "format": "JPEG",
            "example": "image.jpg"
          }
        }
      },
      "Prediction": {
        "type": "object",
        "properties": {
          "prediction": {
            "enum": [
              "Cardboard",
              "Glass",
              "Metal",
              "Paper",
              "Plastic",
              "Trash"
            ],
            "type": "string"
          }
        }
      },
      "CategoriesAndCategoryInstructions": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "example": {
          "categories": [
            "cardboard",
            "glass",
            "metal",
            "paper",
            "plastic",
            "trash"
          ],
          "category_instructions": [
            [
              "cardboard , Throw in recycling bin."
            ],
            [
              "glass, Make sure it is not broken., Rinse container, Throw in specified    bin"
            ],
            [
              "metal, Make sure it is not sharp., Throw in specified bin"
            ],
            [
              "paper, Make sure it is not dirty., Throw in specified bin"
            ],
            [
              "plastic, Rinse container and throw in blue bin."
            ],
            [
              "trash, Dispose in thrash bin."
            ]
          ],
          "bins": [
            "VA",
            "GM",
            "MB",
            "EV",
            "H",
            "LB"
          ],
          "buildings": [
            "VA entrance vestibule",
            "VA 1st floor elevators",
            "VA battery box"
          ]
        }
      },
      "CreateUser": {
        "required": [
          "username",
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "username": "username1",
          "email": "email1",
          "password": "password1"
        }
      },
      "AuthenticateUser": {
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "username": "username1",
          "password": "password1"
        }
      },
      "UpdatePassword": {
        "required": [
          "username",
          "new_password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          }
        },
        "example": {
          "username": "username1",
          "new_password": "password1"
        }
      },
      "ResetPassword": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "example": {
          "email": "Bob123@email.com"
        }
      },
      "UpdateUsernameAndEmail": {
        "required": [
          "old_username",
          "new_username",
          "email"
        ],
        "type": "object",
        "properties": {
          "old_username": {
            "type": "string"
          },
          "new_username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "example": {
          "old_username": "Deedeemegadoodoo",
          "new_username": "Megadeedeemegadoodoo",
          "email": "Bob123@email.com"
        }
      },
      "DeleteUser": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          }
        },
        "example": {
          "username": "Deedeemegadoodoo"
        }
      },
      "BinImages": {
        "type": "object",
        "properties": {
          "bin_images": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "BuildingImages": {
        "type": "object",
        "properties": {
          "building_images": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "VerifyEmail": {
        "required": [
          "passcode",
          "email"
        ],
        "type": "object",
        "properties": {
          "passcode": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      }
    }
  }
}