// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProfileNavigator tests renders correctly 1`] = `
<GestureHandlerRootView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "rgb(242, 242, 242)",
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <RNSScreenContainer
        onLayout={[Function]}
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <RNSScreen
          activityState={2}
          forwardedRef={[Function]}
          pointerEvents="box-none"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        >
          <View
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          />
          <View
            accessibilityElementsHidden={false}
            closing={false}
            gestureVelocityImpact={0.3}
            importantForAccessibility="auto"
            onClose={[Function]}
            onGestureBegin={[Function]}
            onGestureCanceled={[Function]}
            onGestureEnd={[Function]}
            onOpen={[Function]}
            onTransition={[Function]}
            pointerEvents="box-none"
            style={
              Array [
                Object {
                  "display": "flex",
                  "overflow": undefined,
                },
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
              ]
            }
            transitionSpec={
              Object {
                "close": Object {
                  "animation": "timing",
                  "config": Object {
                    "duration": 150,
                    "easing": [Function],
                  },
                },
                "open": Object {
                  "animation": "timing",
                  "config": Object {
                    "duration": 350,
                    "easing": [Function],
                  },
                },
              }
            }
          >
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                }
              }
            />
            <View
              pointerEvents="box-none"
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <View
                collapsable={false}
                forwardedRef={[Function]}
                needsOffscreenAlphaCompositing={true}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "opacity": 1,
                    "transform": Array [
                      Object {
                        "translateY": 0,
                      },
                    ],
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "backgroundColor": "rgb(242, 242, 242)",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      Object {
                        "flex": 1,
                        "flexDirection": "column-reverse",
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "flex": 1,
                        }
                      }
                    >
                      <RNCSafeAreaProvider
                        onInsetsChange={[Function]}
                        style={
                          Array [
                            Object {
                              "flex": 1,
                            },
                            undefined,
                          ]
                        }
                      >
                        <View>
                          <View
                            style={
                              Object {
                                "backgroundColor": "#0F968D",
                                "height": 266.8,
                                "position": "absolute",
                                "width": "100%",
                              }
                            }
                          />
                          <Image
                            source={
                              Object {
                                "uri": "https://www.gravatar.com/avatar/d41d8cd98f00b204e9800998ecf8427e?size=192&d=mm",
                              }
                            }
                            style={
                              Object {
                                "alignItems": "center",
                                "borderColor": "white",
                                "borderRadius": 1042,
                                "borderWidth": 3,
                                "height": 262.5,
                                "justifyContent": "center",
                                "marginLeft": "auto",
                                "marginRight": "auto",
                                "marginTop": "18%",
                                "width": 262.5,
                              }
                            }
                          />
                          <Text
                            style={
                              Object {
                                "color": "grey",
                                "fontFamily": "Roboto",
                                "fontSize": 25,
                                "fontWeight": "bold",
                                "marginTop": 10,
                                "textAlign": "center",
                              }
                            }
                          >
                             
                            Guest
                             
                          </Text>
                          <Text
                            onPress={[Function]}
                            style={
                              Object {
                                "alignSelf": "center",
                                "backgroundColor": "#0F968D",
                                "borderColor": "#0F968D",
                                "borderRadius": 5,
                                "borderWidth": 2,
                                "color": "white",
                                "fontFamily": "Roboto",
                                "marginTop": 20,
                                "paddingHorizontal": 15,
                                "paddingVertical": 10,
                                "textAlign": "center",
                                "width": "30%",
                              }
                            }
                          >
                             
                            Log In
                             
                          </Text>
                        </View>
                      </RNCSafeAreaProvider>
                    </View>
                    <View
                      pointerEvents="box-none"
                    />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreen>
      </RNSScreenContainer>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 56,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          }
        }
      />
    </View>
  </RNCSafeAreaProvider>
</GestureHandlerRootView>
`;
